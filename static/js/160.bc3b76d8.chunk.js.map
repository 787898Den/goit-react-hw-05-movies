{"version":3,"file":"static/js/160.bc3b76d8.chunk.js","mappings":"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","sources":["Service/getGenres.js","components/LinkBack/LinkBack.jsx","Pages/MovieDetailsPage/MovieDetailsPage.styled.jsx","Pages/MovieDetailsPage/MovieDetailsPage.jsx","Pages/NotFoundPage/NotFoundPage.jsx","Service/Api.js","components/LinkBack/LinkGoBack.styled.jsx"],"sourcesContent":["const genres = {\n    28: {\n      en: 'Action',\n      uk: '–ë–æ–π–æ–≤–∏–∫',\n    },\n    12: {\n      en: 'Adventure',\n      uk: '–ü—Ä–∏–≥–æ–¥–∏',\n    },\n    16: {\n      en: 'Animation',\n      uk: '–ê–Ω—ñ–º–∞—Ü—ñ—è',\n    },\n    35: {\n      en: 'Comedy',\n      uk: '–ö–æ–º–µ–¥—ñ—è',\n    },\n    80: {\n      en: 'Crime',\n      uk: '–ö—Ä–∏–º—ñ–Ω–∞–ª—å–Ω–∏–π',\n    },\n    99: {\n      en: 'Documentary',\n      uk: '–î–æ–∫—É–º–µ–Ω—Ç–∞–ª—å–Ω–∏–π',\n    },\n    18: {\n      en: 'Drama',\n      uk: '–î—Ä–∞–º–∞',\n    },\n    10751: {\n      en: 'Family',\n      uk: '–°—ñ–º–µ–π–Ω–∏–π',\n    },\n    14: {\n      en: 'Fantasy',\n      uk: '–§–µ–Ω—Ç–∞–∑—ñ',\n    },\n    36: {\n      en: 'History',\n      uk: '–Ü—Å—Ç–æ—Ä–∏—á–Ω–∏–π',\n    },\n    27: {\n      en: 'Horror',\n      uk: '–ñ–∞—Ö–∏',\n    },\n    10402: {\n      en: 'Music',\n      uk: '–ú—é–∑–∏–∫–ª',\n    },\n    9648: {\n      en: 'Mystery',\n      uk: '–ú—ñ—Å—Ç–∏—á–Ω–∏–π',\n    },\n    10749: {\n      en: 'Romance',\n      uk: '–ú–µ–ª–æ–¥—Ä–∞–º–∞',\n    },\n    878: {\n      en: 'Science Fiction',\n      uk: '–ù–∞—É–∫–æ–≤–∞ —Ñ–∞–Ω—Ç–∞—Å—Ç–∏–∫–∞',\n    },\n    10770: {\n      en: 'TV Movie',\n      uk: '–¢–í —Ñ—ñ–ª—å–º',\n    },\n    53: {\n      en: 'Thriller',\n      uk: '–¢—Ä–∏–ª–µ—Ä',\n    },\n    10752: {\n      en: 'War',\n      uk: '–í–æ—î–Ω–Ω–∏–π',\n    },\n    37: {\n      en: 'Western',\n      uk: '–í–µ—Å—Ç–µ—Ä–Ω',\n    },\n  };\n  \n  export const getGenres = list => {\n    if (!list) return '';\n    const language = window.location.hash.substring(1);\n    const g = [];\n  \n    for (const re of list) {\n      if (g.length === 2) {\n        g.push('...');\n        break;\n      }\n  \n      if (typeof re === 'object') {\n        g.push(re.name);\n        continue;\n      }\n  \n      if (!genres[re]) continue;\n  \n      g.push(genres[re][language]);\n    }\n  \n    return g.map(g => `${g}`).join(', ');\n  };","import { Link } from './LinkGoBack.styled';\n\nexport const BackLink = ({href}) => {\n\n    return <Link to={href}>Go Back</Link>\n}","import styled from '@emotion/styled';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  margin-bottom: 15px;\n`;\n\nexport const ImageThumb = styled.div`\n  margin-right: 50px;\n  display: flex;\n  justify-content: flex-end;\n  flex-basis: 100%;\n`;\n\nexport const Image = styled.img`\n  display: block;\n  max-width: 100%;\n  width: 260px;\n  height: auto;\n`;\n\nexport const Description = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex-basis: fit-content;\n`;\n\nexport const Title = styled.h2`\n  font-weight: 700;\n  color: darkslateblue;\n`;\n\nexport const Genres = styled.p`\n  font-size: 18px;\n  font-weight: 700;\n  color: salmon;\n`;\n\nexport const Overview = styled.p`\n  font-size: 20px;\n  font-weight: 500;\n`;\nexport const OverviewText = styled.p`\ncolor: rgb(113, 169, 176);\n`;\n\nexport const Userscore = styled.p`\ncolor: orange;\n`;\n\nexport const Thumb = styled.div`\nmargin-left:25px;\n`;","import React, { useEffect, useState, useRef } from \"react\";\nimport { Link, useParams, Outlet, useLocation} from \"react-router-dom\";\nimport {getMovieDetails} from '../../Service/Api';\nimport { getGenres } from \"Service/getGenres\";\nimport { BackLink } from \"components/LinkBack/LinkBack\";\nimport defaultImg from '../../images/Unknown Profile Picture Png.png';\nimport { Description, Genres, OverviewText,Overview, Title, Userscore, Wrapper,Image, Thumb } from \"./MovieDetailsPage.styled\";\nimport { NotFoundPage } from \"Pages/NotFoundPage/NotFoundPage\";\n\nexport const MovieDetailsPage = () => {\n\n    const [movie, setMovie] = useState([]);\n    const { movieId } = useParams();\n    const [error, setError] = useState(false);\n    const location = useLocation();\n    const goBack = location.state?.from ?? '/';\n    const search = useRef(location.state?.from?.search);\n    const { title, poster_path, popularity, overview, genres } = movie;\n\n    useEffect(() => {\n        getMovieDetails(movieId)\n        .then(data => {\n          if (data.length !== 0) {\n            return setMovie(data);\n          }\n        })\n        .catch(error => {\n          console.error(error);\n          setError(true);\n        });\n    }, [movieId]);\n\n    return(\n        <>\n            {error && <NotFoundPage />}\n \n            {movie.length !== 0 && (\n            <>\n            <BackLink href={goBack} />\n            <Wrapper>\n                <Image src={poster_path\n                      ? `https://image.tmdb.org/t/p/w500${poster_path}`\n                      : defaultImg} alt={title} />\n\n                <Thumb >\n                    <Title>{title}</Title>\n                    <Userscore>User Score:{Math.floor(popularity)}%</Userscore>\n                    <Overview>Overview</Overview>\n                    <OverviewText>{overview}</OverviewText>\n                    <Genres>Genres</Genres>\n                    <Genres>{getGenres(genres)}</Genres>\n                </Thumb>\n            </Wrapper>\n            \n            <Title >Additional information</Title>\n            <Description>\n                <Link to=\"cast\"\n                      state={{\n                      from: search.current ? `/movies${search.current}` : '/',\n                    }}>Cast</Link>\n                <Link to=\"reviews\"\n                      state={{\n                        from: search.current ? `/movies${search.current}` : '/',\n                    }}>Reviews</Link>\n                    <Outlet />\n            </Description>\n            </>  \n            )} \n      </>       \n    );\n}","import React from 'react';\nimport { Link } from 'components/LinkBack/LinkGoBack.styled';\n\nexport const NotFoundPage = () => {\n  return (\n   \n      <h1 >\n        Opps! Nothing found!üßê     \n        <Link  to={'/'}>Back to Home Page</Link>\n      </h1>\n  )\n    \n};\n\n\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: '2f88dfb09f5afe72bd3cb83b332c8204',\n};\n\nexport async function getTrendingMovies() {\n  const response = await axios.get('/trending/movie/day');\n  return response.data;\n}\n\nexport async function getMovieByQuery(query) {\n  const response = await axios.get(`/search/movie?query=${query}`);\n  return response.data;\n}\n\nexport async function getMovieDetails(id) {\n  const response = await axios.get(`/movie/${id}`);\n  return response.data;\n}\n\nexport async function getMovieCredits(id) {\n  const response = await axios.get(`/movie/${id}/credits`);\n  return response.data;\n}\n\nexport async function getMovieReviews(id) {\n  const response = await axios.get(`/movie/${id}/reviews`);\n  return response.data;\n}","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const Link = styled(NavLink)`\n  font-weight: 500;\n  font-size: 20px;\n  display: inline-block;\n  text-decoration: none;\n  color: white;\n  border-radius: 10px;\n  background-color: rgb(113, 169, 176);\n  padding: 5px;\n  margin-left: 25px;\n  margin-bottom: 25px;\n  &:hover,\n  &:focus {\n    color: red;\n  }\n`"],"names":["genres","en","uk","getGenres","list","language","window","location","hash","substring","g","re","length","push","name","map","join","BackLink","href","to","Wrapper","styled","Image","Description","Title","Genres","Overview","OverviewText","Userscore","Thumb","MovieDetailsPage","useState","movie","setMovie","movieId","useParams","error","setError","useLocation","goBack","state","from","search","useRef","title","poster_path","popularity","overview","useEffect","getMovieDetails","then","data","catch","console","NotFoundPage","src","defaultImg","alt","Math","floor","current","getTrendingMovies","axios","response","getMovieByQuery","query","id","getMovieCredits","getMovieReviews","api_key","Link","NavLink"],"sourceRoot":""}