{"version":3,"file":"static/js/736.c21cb134.chunk.js","mappings":"2TAOO,SAAeA,IAAtB,4CAAO,OAAP,oBAAO,oGACkBC,IAAAA,IAAU,uBAD5B,cACCC,EADD,yBAEEA,EAASC,MAFX,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,uFACkBJ,IAAAA,IAAA,8BAAiCI,IADnD,cACCH,EADD,yBAEEA,EAASC,MAFX,kEAKA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,uFACkBN,IAAAA,IAAA,iBAAoBM,IADtC,cACCL,EADD,yBAEEA,EAASC,MAFX,kEAKA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA+BD,GAA/B,uFACkBN,IAAAA,IAAA,iBAAoBM,EAApB,aADlB,cACCL,EADD,yBAEEA,EAASC,MAFX,kEAKA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAA+BF,GAA/B,uFACkBN,IAAAA,IAAA,iBAAoBM,EAApB,aADlB,cACCL,EADD,yBAEEA,EAASC,MAFX,kEAzBPF,IAAAA,SAAAA,QAAyB,+BACzBA,IAAAA,SAAAA,OAAwB,CACtBS,QAAS,qC,gJCFEC,EAAOC,EAAAA,EAAAA,GAAH,4GAOJC,EAAOD,EAAAA,EAAAA,GAAH,8HAOJE,EAAQF,EAAAA,EAAAA,EAAH,4DAKLG,EAAMH,EAAAA,EAAAA,IAAH,wCAIHI,EAAYJ,EAAAA,EAAAA,EAAH,+C,SCnBTK,EAAO,WAChB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KASA,OAPAC,EAAAA,EAAAA,YAAU,YACNf,EAAAA,EAAAA,IAAgBU,GAASM,MAAK,SAAArB,GAC1BmB,EAAQnB,EAAKkB,WAGnB,CAACH,KAGC,8BACKG,IACD,SAACV,EAAD,UACKU,EAAKI,KAAI,SAAAC,GAAI,OAEV,UAACb,EAAD,YACI,SAACE,EAAD,CAAKY,IAAMD,EAAKE,aAAL,yCAAuDF,EAAKE,cAAmBC,EAAaC,IAAKJ,EAAKK,QACjH,SAACjB,EAAD,UAAQY,EAAKK,QACb,UAACf,EAAD,wBAAsBU,EAAKM,eAHpBN,EAAKnB,a","sources":["Service/Api.js","components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: '2f88dfb09f5afe72bd3cb83b332c8204',\n};\n\nexport async function getTrendingMovies() {\n  const response = await axios.get('/trending/movie/day');\n  return response.data;\n}\n\nexport async function getMovieByQuery(query) {\n  const response = await axios.get(`/search/movie?query=${query}`);\n  return response.data;\n}\n\nexport async function getMovieDetails(id) {\n  const response = await axios.get(`/movie/${id}`);\n  return response.data;\n}\n\nexport async function getMovieCredits(id) {\n  const response = await axios.get(`/movie/${id}/credits`);\n  return response.data;\n}\n\nexport async function getMovieReviews(id) {\n  const response = await axios.get(`/movie/${id}/reviews`);\n  return response.data;\n}","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n    list-style:none;\n    margin: -10px;\n    display: flex;\n    flex-wrap: wrap;\n`;\n\nexport const Item = styled.li`\ntext-align: center;\nwidth: 100%;\nflex-basis: calc(100% / 5 - 20px);\nmargin: 10px;\npadding: 10px;\n`;\nexport const Title = styled.p`\nfont-size: 18px;\ncolor: darkblue;\n`;\n\nexport const Img = styled.img`\nheight: 150px;\n`;\n\nexport const Character = styled.p`\ncolor: darkgoldenrod;\n`;","import React, {  useEffect, useState } from \"react\";\nimport { useParams} from \"react-router-dom\";\nimport {getMovieCredits} from '../../Service/Api';\nimport defaultImg from '../../images/Unknown Profile Picture Png.png';\nimport { Character, Img, Item, List, Title } from \"./Cast.styled\";\n\nexport const Cast = () =>{\n    const { movieId } = useParams();\n    const [cast, setCast] = useState(null);\n    \n    useEffect(()=>{\n        getMovieCredits(movieId).then(data=>{\n            setCast(data.cast);\n            \n        });\n    },[movieId]);\n    \n    return(\n        <>\n            {cast&&(\n            <List>\n                {cast.map(item=>(\n                    \n                    <Item key={item.id}>\n                        <Img src= {item.profile_path ? (`https://image.tmdb.org/t/p/w500${item.profile_path}`) : (defaultImg)} alt={item.name}></Img>\n                        <Title>{item.name}</Title>\n                        <Character>Character:{item.character}</Character>\n                    </Item>\n                ))}\n            </List> \n            )}\n        </>\n         \n    );\n    \n}"],"names":["getTrendingMovies","axios","response","data","getMovieByQuery","query","getMovieDetails","id","getMovieCredits","getMovieReviews","api_key","List","styled","Item","Title","Img","Character","Cast","movieId","useParams","useState","cast","setCast","useEffect","then","map","item","src","profile_path","defaultImg","alt","name","character"],"sourceRoot":""}